<project xmlns:ivy="antlib:org.apache.ivy.ant"
    xmlns:if="ant:if"
    xmlns:unless="ant:unless"
    xmlns:au="antlib:org.apache.ant.antunit">

    <description>
        Example project applying gradle conventions to ant.
    </description>
    <property name="project.organisation" value="com.github.moaxcp"/>
    <basename property="ant.project.name" file="${basedir}"/>
    <property name="project.version" value="0.0.0"/>
    <property name="ivy.version" value="2.4.0"/>
    <property name="ivy.settings.file" location="ivysettings.xml"/>

    <property name="build.dir" location="build"/>
    <property name="build.cache" location="build-cache"/>
    <property name="cache.download.dir" location="${build.cache}/download"/>

    <property name="build.test.results.dir" location="${build.dir}/test-results"/>
    <property name="reports.dir" location="${build.dir}/reports"/>
    <property name="reports.antunit.dir" location="${reports.dir}/antunit"/>

    <property name="src.dir" location="src"/>
    <property name="src.antunit.dir" location="${src.dir}/antunit"/>
    <property name="src.antunit.ant.dir" location="${src.antunit.dir}/ant"/>

    <target name="clean-all" depends="clean, clean-caches"/>

    <target name="clean">
        <delete dir="${build.dir}"/>
    </target>

    <target name="clean-caches" depends="clean-ivy-cache, clean-build-cache"/>

    <target name="clean-build-cache">
        <delete dir="${build.cache}"/>
    </target>

    <target name="clean-ivy-cache" depends="install-ivy">
        <ivy:cleancache/>
    </target>

    <target name="install-ivy">
        <local name="ivy.dir"/>
        <local name="ivy.file"/>
        <local name="ivy.available"/>

        <property name="ivy.dir" location="${cache.download.dir}/ivy"/>
        <property name="ivy.file" location="${ivy.dir}/ivy-${ivy.version}.jar"/>
        <available file="${ivy.file}" property="ivy.present"/>

        <echo if:set="ivy.present">ivy installed at ${ivy.file}</echo>

        <mkdir unless:set="ivy.present" dir="${ivy.dir}"/>
        <get unless:set="ivy.present" dest="${ivy.file}" 
            src="http://repo1.maven.org/maven2/org/apache/ivy/ivy/${ivy.version}/ivy-${ivy.version}.jar"
            verbose="true"/>

        <taskdef resource="org/apache/ivy/ant/antlib.xml" uri="antlib:org.apache.ivy.ant" classpath="${ivy.file}"/>
    </target>

    <target name="init-ivy" depends="install-ivy">
        <ivy:resolve/>
    </target>

    <target name="init-build" depends="init-ivy">
        <ivy:cachepath pathid="build.classpath" conf="build"/>
        <taskdef resource="org/apache/ant/antunit/antlib.xml" uri="antlib:org.apache.ant.antunit" 
            classpathref="build.classpath"/>
    </target>

    <target name="test-short-build" depends="init-build">
        <mkdir dir="${build.test.results.dir}"/>
        <au:antunit>
            <fileset dir="${src.antunit.ant.dir}">
                <include name="**/test-short*.xml"/>
            </fileset>
            <au:plainlistener/>
            <au:xmllistener todir="${build.test.results.dir}"/>
        </au:antunit>
        <mkdir dir="${reports.antunit.dir}"/>
        <junitreport todir="${build.test.results.dir}" tofile="TESTS-short-TestSuites.xml">
            <fileset dir="${build.test.results.dir}">
                <include name="**/*test-short*.xml"/>
            </fileset>
            <report format="frames" todir="${reports.antunit.dir}/html"/>
        </junitreport>
    </target>

    <target name="test-long-build" depends="init-build">
        <mkdir dir="${build.test.results.dir}"/>
        <au:antunit>
            <fileset dir="${src.antunit.ant.dir}">
                <include name="**/test-long*.xml"/>
            </fileset>
            <au:plainlistener/> 
            <au:xmllistener todir="${build.test.results.dir}"/>
        </au:antunit>
        <mkdir dir="${reports.antunit.dir}"/>
        <junitreport todir="${build.test.results.dir}" tofile="TESTS-long-TestSuites.xml">
            <fileset dir="${build.test.results.dir}">
                <include name="**/*test-long*.xml"/>
            </fileset>
            <report format="frames" todir="${reports.antunit.dir}/html"/>
        </junitreport>
    </target>

    <target name="test-build" depends="test-short-build, test-long-build">
        <junitreport todir="${build.test.results.dir}" tofile="TESTS-all-TestSuites.xml">
            <fileset dir="${reports.antunit.dir}">
                <include name="TEST-*.xml"/>
            </fileset>
            <report format="frames" todir="${reports.antunit.dir}/html"/>
        </junitreport>
    </target>

    <target name="test" depends="test-short-build"/>
</project>
